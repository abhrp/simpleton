ext {
    buildToolsVersion = "27.0.3"
    minSdkVersion = 16
    compileSdkVersion = 27
    targetSdkVersion = 27

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinVersion = "1.2.51"

    supportLibraryVersion = "27.1.1"
    roomVersion = "1.1.1"
    daggerVersion = "2.16"

    retrofitVersion = '2.4.0'
    retrofitRxJavaAdapterVersion = '1.0.0'
    retrofitRxJava2AdapterVersion = '1.0.0'
    okHttpVersion = '3.10.0'
    gsonVersion = '2.8.5'

    archComponents = '1.1.1'

    picassoVersion = '2.71828'
    timberVersion = '4.7.1'
    constraintLayoutVersion = '1.1.2'

    rxJavaVersion = "2.2.0"
    rxAndroid = '2.0.2'
    javaxAnnotationVersion = "1.3.2"
    javaxInjectVersion = "1"

    androidTestRunner = '1.0.2'
    jUnitVersion = "4.12"
    assertJVersion = "3.10.0"
    mockitoKotlinVersion = "1.6.0"
    robolectricVersion = "3.8"
    mockitoVersion = '2.19.0'
    espressoVersion = '3.0.2'

    domainDependencies = [
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}"
    ]

    domainTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}"
    ]

    dataDependencies = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    dataTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            kotlinUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}"
    ]

    remoteDependencies = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            okhttp: "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okhttpLogger: "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit: "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter: "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
            retrofitAdapter2: "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    ]

    remoteTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            kotlinUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            androidRunner: "com.android.support.test:runner:${androidTestRunner}",
            androidTestRules: "com.android.support.test:rules:${androidTestRunner}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}"
    ]

    cacheDependencies = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            roomRuntime: "android.arch.persistence.room:runtime:$roomVersion",
            roomCompiler: "android.arch.persistence.room:compiler:$roomVersion",
            roomRx: "android.arch.persistence.room:rxjava2:$roomVersion",
            daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger: "com.google.dagger:dagger:$daggerVersion"
    ]

    cacheTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            kotlinUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            androidRunner: "com.android.support.test:runner:${androidTestRunner}",
            androidTestRules: "com.android.support.test:rules:${androidTestRunner}",
            roomTesting: "android.arch.persistence.room:testing:$roomVersion",
            archTesting: "android.arch.core:core-testing:$archComponents",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}"
    ]

    presentationDependencies = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger: "com.google.dagger:dagger:$daggerVersion",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroid}",
            archRuntime: "android.arch.lifecycle:runtime:${archComponents}",
            archCompiler: "android.arch.lifecycle:compiler:${archComponents}",
            archExtensions: "android.arch.lifecycle:extensions:${archComponents}",
    ]

    presentationTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            kotlinUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            androidRunner: "com.android.support.test:runner:${androidTestRunner}",
            androidTestRules: "com.android.support.test:rules:${androidTestRunner}",
            archTesting: "android.arch.core:core-testing:$archComponents",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}"
    ]

    appDependencies = [
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger: "com.google.dagger:dagger:$daggerVersion",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroid}",
            archRuntime: "android.arch.lifecycle:runtime:${archComponents}",
            archCompiler: "android.arch.lifecycle:compiler:${archComponents}",
            archExtensions: "android.arch.lifecycle:extensions:${archComponents}",
            timber: "com.jakewharton.timber:timber:${timberVersion}",
            picasso: "com.squareup.picasso:picasso:${picassoVersion}",
            supportAppCompat: "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportV4: "com.android.support:support-v4:${supportLibraryVersion}",
            recyclerView: "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            design: "com.android.support:design:${supportLibraryVersion}",
            daggerSupport: "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
            roomRuntime: "android.arch.persistence.room:runtime:$roomVersion",
            roomCompiler: "android.arch.persistence.room:compiler:$roomVersion",
            roomRx: "android.arch.persistence.room:rxjava2:$roomVersion",
            kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            constraintLayout: "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
    ]

    appTestDependencies = [
            jUnit: "junit:junit:${jUnitVersion}",
            assertJ: "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman:mockito-kotlin-kt1.1:${mockitoKotlinVersion}",
            kotlinUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            androidRunner: "com.android.support.test:runner:${androidTestRunner}",
            androidTestRules: "com.android.support.test:rules:${androidTestRunner}",
            archTesting: "android.arch.core:core-testing:$archComponents",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            mockitoInline: "org.mockito:mockito-inline:${mockitoVersion}",
            mockitoAndroid: "org.mockito:mockito-android:${mockitoVersion}",
            espressoCore: "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    ]
}